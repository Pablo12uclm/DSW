{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\victo\\\\Documents\\\\GitHub\\\\DSW\\\\frontend\\\\src\\\\components\\\\SignUp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignUp = ({\n  onSignUp\n}) => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  const handleSignUp = () => {\n    // Verificar si las contraseñas coinciden\n    if (password !== confirmPassword) {\n      setError('Las contraseñas no coinciden');\n      return;\n    }\n\n    // Aquí puedes agregar la lógica para enviar los datos de registro al servidor\n    // Por ejemplo, llamando a una función onSignUp y pasándole los datos del formulario\n    onSignUp({\n      username,\n      password\n    });\n\n    // Limpiar los campos del formulario después de enviar los datos\n    setUsername('');\n    setPassword('');\n    setConfirmPassword('');\n    setError('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Registro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Nombre de Usuario\",\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Contrase\\xF1a\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Repetir Contrase\\xF1a\",\n      value: confirmPassword,\n      onChange: e => setConfirmPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSignUp,\n      children: \"Registrarse\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(SignUp, \"liczFJxMkMvz6dmZ1+xlq7lc9+c=\");\n_c = SignUp;\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SignUp","onSignUp","_s","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","error","setError","handleSignUp","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/victo/Documents/GitHub/DSW/frontend/src/components/SignUp.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst SignUp = ({ onSignUp }) => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    const handleSignUp = () => {\r\n        // Verificar si las contraseñas coinciden\r\n        if (password !== confirmPassword) {\r\n            setError('Las contraseñas no coinciden');\r\n            return;\r\n        }\r\n\r\n        // Aquí puedes agregar la lógica para enviar los datos de registro al servidor\r\n        // Por ejemplo, llamando a una función onSignUp y pasándole los datos del formulario\r\n        onSignUp({ username, password });\r\n\r\n        // Limpiar los campos del formulario después de enviar los datos\r\n        setUsername('');\r\n        setPassword('');\r\n        setConfirmPassword('');\r\n        setError('');\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Registro</h2>\r\n            {/* Input para el nombre de usuario */}\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Nombre de Usuario\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n            {/* Input para la contraseña */}\r\n            <input\r\n                type=\"password\"\r\n                placeholder=\"Contraseña\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            {/* Input para repetir la contraseña */}\r\n            <input\r\n                type=\"password\"\r\n                placeholder=\"Repetir Contraseña\"\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n            />\r\n            {/* Botón para registrarse */}\r\n            <button onClick={handleSignUp}>Registrarse</button>\r\n            {/* Mostrar mensaje de error si existe */}\r\n            {error && <p>{error}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignUp;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,MAAM,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMc,YAAY,GAAGA,CAAA,KAAM;IACvB;IACA,IAAIN,QAAQ,KAAKE,eAAe,EAAE;MAC9BG,QAAQ,CAAC,8BAA8B,CAAC;MACxC;IACJ;;IAEA;IACA;IACAT,QAAQ,CAAC;MAAEE,QAAQ;MAAEE;IAAS,CAAC,CAAC;;IAEhC;IACAD,WAAW,CAAC,EAAE,CAAC;IACfE,WAAW,CAAC,EAAE,CAAC;IACfE,kBAAkB,CAAC,EAAE,CAAC;IACtBE,QAAQ,CAAC,EAAE,CAAC;EAChB,CAAC;EAED,oBACIX,OAAA;IAAAa,QAAA,gBACIb,OAAA;MAAAa,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEjBjB,OAAA;MACIkB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,mBAAmB;MAC/BC,KAAK,EAAEhB,QAAS;MAChBiB,QAAQ,EAAGC,CAAC,IAAKjB,WAAW,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eAEFjB,OAAA;MACIkB,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,eAAY;MACxBC,KAAK,EAAEd,QAAS;MAChBe,QAAQ,EAAGC,CAAC,IAAKf,WAAW,CAACe,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eAEFjB,OAAA;MACIkB,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,uBAAoB;MAChCC,KAAK,EAAEZ,eAAgB;MACvBa,QAAQ,EAAGC,CAAC,IAAKb,kBAAkB,CAACa,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CAAC,eAEFjB,OAAA;MAAQwB,OAAO,EAAEZ,YAAa;MAAAC,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAElDP,KAAK,iBAAIV,OAAA;MAAAa,QAAA,EAAIH;IAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvB,CAAC;AAEd,CAAC;AAACd,EAAA,CAtDIF,MAAM;AAAAwB,EAAA,GAANxB,MAAM;AAwDZ,eAAeA,MAAM;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}