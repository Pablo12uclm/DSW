{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\victo\\\\Documents\\\\GitHub\\\\DSW\\\\frontend\\\\src\\\\components\\\\NotesList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Note from './Note'; // Asegúrate de tener este componente\nimport NoteForm from './NoteForm'; // Asegúrate de tener este componente\nimport '../styles/App.css';\nimport UserManagement from './components/UserManagement';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NotesList({\n  isAdminLoggedIn\n}) {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const fetchNotes = () => {\n    fetch('http://localhost:3000/api/notes').then(response => response.json()).then(data => setNotes(data)).catch(error => console.error('Error fetching notes:', error));\n  };\n  const addNote = note => {\n    fetch('http://localhost:3000/api/notes', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(note)\n    }).then(response => response.json()).then(newNote => {\n      setNotes([...notes, newNote]); // Agregar la nueva nota al estado\n    }).catch(error => console.error('Error adding note:', error));\n  };\n  const updateNote = (id, updatedNote) => {\n    fetch(`http://localhost:3000/api/notes/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedNote)\n    }).then(response => response.json()).then(updatedNote => {\n      const updatedNotes = notes.map(note => {\n        if (note.id === id) {\n          return updatedNote;\n        }\n        return note;\n      });\n      setNotes(updatedNotes); // Actualizar el estado con la nota actualizada\n    }).catch(error => console.error('Error updating note:', error));\n  };\n  const deleteNote = id => {\n    fetch(`http://localhost:3000/api/notes/${id}`, {\n      method: 'DELETE'\n    }).then(() => {\n      fetchNotes(); // Recargar las notas después de eliminar\n    }).catch(error => console.error('Error deleting note:', error));\n  };\n  useEffect(() => {\n    fetchNotes();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isAdminLoggedIn && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: UserManagement,\n      children: \"Gesti\\xF3n de Usuarios\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"[Create Note]\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NoteForm, {\n      addNote: addNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), notes.map(note => /*#__PURE__*/_jsxDEV(Note, {\n      note: note,\n      deleteNote: deleteNote,\n      updateNote: updateNote\n    }, note.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(NotesList, \"vOaC7rmji7ux6HtcIeocV+tl1oY=\");\n_c = NotesList;\nexport default NotesList;\nvar _c;\n$RefreshReg$(_c, \"NotesList\");","map":{"version":3,"names":["React","useEffect","useState","Note","NoteForm","UserManagement","jsxDEV","_jsxDEV","NotesList","isAdminLoggedIn","_s","notes","setNotes","fetchNotes","fetch","then","response","json","data","catch","error","console","addNote","note","method","headers","body","JSON","stringify","newNote","updateNote","id","updatedNote","updatedNotes","map","deleteNote","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/victo/Documents/GitHub/DSW/frontend/src/components/NotesList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Note from './Note'; // Asegúrate de tener este componente\nimport NoteForm from './NoteForm'; // Asegúrate de tener este componente\nimport '../styles/App.css'\nimport UserManagement from './components/UserManagement';\n\nfunction NotesList({ isAdminLoggedIn}) {\n  const [notes, setNotes] = useState([]);\n\n  const fetchNotes = () => {\n    fetch('http://localhost:3000/api/notes')\n      .then(response => response.json())\n      .then(data => setNotes(data))\n      .catch(error => console.error('Error fetching notes:', error));\n  };\n\n  const addNote = (note) => {\n    fetch('http://localhost:3000/api/notes', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(note),\n    })\n    .then(response => response.json())\n    .then(newNote => {\n      setNotes([...notes, newNote]); // Agregar la nueva nota al estado\n    })\n    .catch(error => console.error('Error adding note:', error));\n  };\n\n  const updateNote = (id, updatedNote) => {\n    fetch(`http://localhost:3000/api/notes/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(updatedNote),\n    })\n    .then(response => response.json())\n    .then(updatedNote => {\n      const updatedNotes = notes.map(note => {\n        if (note.id === id) {\n          return updatedNote;\n        }\n        return note;\n      });\n      setNotes(updatedNotes); // Actualizar el estado con la nota actualizada\n    })\n    .catch(error => console.error('Error updating note:', error));\n  };\n\n  const deleteNote = (id) => {\n    fetch(`http://localhost:3000/api/notes/${id}`, {\n      method: 'DELETE',\n    })\n    .then(() => {\n      fetchNotes(); // Recargar las notas después de eliminar\n    })\n    .catch(error => console.error('Error deleting note:', error));\n  };\n\n  useEffect(() => {\n    fetchNotes();\n  }, []);\n\n  return (\n    <div>\n      {isAdminLoggedIn && <button onClick={UserManagement}>Gestión de Usuarios</button>}\n      <h1>[Create Note]</h1>\n      <NoteForm addNote={addNote} />\n      <h1>My Notes</h1>\n      {notes.map(note => (\n        <Note \n          key={note.id} \n          note={note} \n          deleteNote={deleteNote} \n          updateNote={updateNote}\n        />\n      ))}\n    </div>\n  );\n  \n}\n\nexport default NotesList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}