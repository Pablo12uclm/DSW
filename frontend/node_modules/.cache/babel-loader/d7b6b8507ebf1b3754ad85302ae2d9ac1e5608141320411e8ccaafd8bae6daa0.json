{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\victo\\\\Documents\\\\GitHub\\\\DSW\\\\frontend\\\\src\\\\components\\\\NotesList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Note from './Note'; // Asegúrate de tener este componente\nimport NoteForm from './NoteForm'; // Asegúrate de tener este componente\nimport '../styles/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NotesList() {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const fetchNotes = () => {\n    fetch('http://localhost:3000/api/notes').then(response => response.json()).then(data => setNotes(data)).catch(error => console.error('Error fetching notes:', error));\n  };\n  const addNote = note => {\n    fetch('http://localhost:3000/api/notes', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(note)\n    }).then(response => response.json()).then(newNote => {\n      setNotes([...notes, newNote]); // Agregar la nueva nota al estado\n    }).catch(error => console.error('Error adding note:', error));\n  };\n  const updateNote = (id, updatedNote) => {\n    fetch(`http://localhost:3000/api/notes/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedNote)\n    }).then(response => response.json()).then(updatedNote => {\n      const updatedNotes = notes.map(note => {\n        if (note.id === id) {\n          return updatedNote;\n        }\n        return note;\n      });\n      setNotes(updatedNotes); // Actualizar el estado con la nota actualizada\n    }).catch(error => console.error('Error updating note:', error));\n  };\n  const deleteNote = id => {\n    fetch(`http://localhost:3000/api/notes/${id}`, {\n      method: 'DELETE'\n    }).then(() => {\n      fetchNotes(); // Recargar las notas después de eliminar\n    }).catch(error => console.error('Error deleting note:', error));\n  };\n  useEffect(() => {\n    fetchNotes();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NoteForm, {\n      addNote: addNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), notes.map(note => /*#__PURE__*/_jsxDEV(Note, {\n      note: note,\n      deleteNote: deleteNote,\n      updateNote: updateNote\n    }, note.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(NotesList, \"vOaC7rmji7ux6HtcIeocV+tl1oY=\");\n_c = NotesList;\nexport default NotesList;\nvar _c;\n$RefreshReg$(_c, \"NotesList\");","map":{"version":3,"names":["React","useEffect","useState","Note","NoteForm","jsxDEV","_jsxDEV","NotesList","_s","notes","setNotes","fetchNotes","fetch","then","response","json","data","catch","error","console","addNote","note","method","headers","body","JSON","stringify","newNote","updateNote","id","updatedNote","updatedNotes","map","deleteNote","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/victo/Documents/GitHub/DSW/frontend/src/components/NotesList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Note from './Note'; // Asegúrate de tener este componente\r\nimport NoteForm from './NoteForm'; // Asegúrate de tener este componente\r\nimport '../styles/App.css'\r\n\r\nfunction NotesList() {\r\n  const [notes, setNotes] = useState([]);\r\n\r\n  const fetchNotes = () => {\r\n    fetch('http://localhost:3000/api/notes')\r\n      .then(response => response.json())\r\n      .then(data => setNotes(data))\r\n      .catch(error => console.error('Error fetching notes:', error));\r\n  };\r\n\r\n  const addNote = (note) => {\r\n    fetch('http://localhost:3000/api/notes', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(note),\r\n    })\r\n    .then(response => response.json())\r\n    .then(newNote => {\r\n      setNotes([...notes, newNote]); // Agregar la nueva nota al estado\r\n    })\r\n    .catch(error => console.error('Error adding note:', error));\r\n  };\r\n\r\n  const updateNote = (id, updatedNote) => {\r\n    fetch(`http://localhost:3000/api/notes/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(updatedNote),\r\n    })\r\n    .then(response => response.json())\r\n    .then(updatedNote => {\r\n      const updatedNotes = notes.map(note => {\r\n        if (note.id === id) {\r\n          return updatedNote;\r\n        }\r\n        return note;\r\n      });\r\n      setNotes(updatedNotes); // Actualizar el estado con la nota actualizada\r\n    })\r\n    .catch(error => console.error('Error updating note:', error));\r\n  };\r\n\r\n  const deleteNote = (id) => {\r\n    fetch(`http://localhost:3000/api/notes/${id}`, {\r\n      method: 'DELETE',\r\n    })\r\n    .then(() => {\r\n      fetchNotes(); // Recargar las notas después de eliminar\r\n    })\r\n    .catch(error => console.error('Error deleting note:', error));\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchNotes();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Create Note</h1>\r\n      <NoteForm addNote={addNote} />\r\n      <h1>My Notes</h1>\r\n      {notes.map(note => (\r\n        <Note \r\n          key={note.id} \r\n          note={note} \r\n          deleteNote={deleteNote} \r\n          updateNote={updateNote}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n  \r\n}\r\n\r\nexport default NotesList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}