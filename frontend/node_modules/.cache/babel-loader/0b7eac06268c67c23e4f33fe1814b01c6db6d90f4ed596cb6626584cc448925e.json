{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\victo\\\\Documents\\\\GitHub\\\\DSW\\\\frontend\\\\src\\\\components\\\\LogIn.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/LogIn.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LogIn = ({\n  onLogin\n}) => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const handleLogin = () => {\n    fetch('http://localhost:3000/api/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    }).then(response => {\n      if (!response.ok) {\n        return response.text().then(errorMessage => {\n          throw new Error(errorMessage); // Corregido: pasa el mensaje de error\n        });\n      }\n      return response.json();\n    }).then(data => {\n      console.log('Login successful:', data);\n      onLogin(data); // Llama a la funci贸n proporcionada por el padre para manejar el inicio de sesi贸n\n    }).catch(error => {\n      console.error('Error during login:', error);\n      setError(error.message); // Establece el mensaje de error obtenido del backend\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"LogIn-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogin,\n          className: \"form-button\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(LogIn, \"lABZ+K3zbnEaFQvlduiFXLNOf5A=\");\n_c = LogIn;\nexport default LogIn;\nvar _c;\n$RefreshReg$(_c, \"LogIn\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","LogIn","onLogin","_s","username","setUsername","password","setPassword","error","setError","handleLogin","fetch","method","headers","body","JSON","stringify","then","response","ok","text","errorMessage","Error","json","data","console","log","catch","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/victo/Documents/GitHub/DSW/frontend/src/components/LogIn.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/LogIn.css';\r\n\r\nconst LogIn = ({ onLogin }) => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleLogin = () => {\r\n    fetch('http://localhost:3000/api/login', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ username, password }),\r\n    })\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          return response.text().then(errorMessage => {\r\n            throw new Error(errorMessage); // Corregido: pasa el mensaje de error\r\n          });\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        console.log('Login successful:', data);\r\n        onLogin(data); // Llama a la funci贸n proporcionada por el padre para manejar el inicio de sesi贸n\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during login:', error);\r\n        setError(error.message); // Establece el mensaje de error obtenido del backend\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Log In</h2>\r\n      <div className='LogIn-container'>\r\n        <input type=\"text\" placeholder=\"Username\" value={username} onChange={(e) => setUsername(e.target.value)} />\r\n        <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n        {/* Mostrar mensaje de error si existe */}\r\n        {error && <p>{error}</p>}\r\n        <div className='container'>\r\n            <button onClick={handleLogin} className='form-button'>Login</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LogIn;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}