{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\victo\\\\Documents\\\\GitHub\\\\DSW\\\\frontend\\\\src\\\\components\\\\NotesList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Note from './Note'; // Asegúrate de tener este componente\nimport NoteForm from './NoteForm'; // Asegúrate de tener este componente\nimport '../styles/App.css';\nimport UserManagement from './UserManagement';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NotesList({\n  isAdminLoggedIn\n}) {\n  _s();\n  const [showUserManagement, setShowUserManagement] = useState(false); // Estado para controlar si se muestra UserManagement\n\n  const handleUserManagementClick = () => {\n    setShowUserManagement(!showUserManagement);\n  };\n  const [notes, setNotes] = useState([]);\n  const fetchNotes = () => {\n    fetch('http://localhost:3000/api/notes').then(response => response.json()).then(data => setNotes(data)).catch(error => console.error('Error fetching notes:', error));\n  };\n  const addNote = note => {\n    fetch('http://localhost:3000/api/notes', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(note)\n    }).then(response => response.json()).then(newNote => {\n      setNotes([...notes, newNote]); // Agregar la nueva nota al estado\n    }).catch(error => console.error('Error adding note:', error));\n  };\n  const updateNote = (id, updatedNote) => {\n    fetch(`http://localhost:3000/api/notes/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedNote)\n    }).then(response => response.json()).then(updatedNote => {\n      const updatedNotes = notes.map(note => {\n        if (note.id === id) {\n          return updatedNote;\n        }\n        return note;\n      });\n      setNotes(updatedNotes); // Actualizar el estado con la nota actualizada\n    }).catch(error => console.error('Error updating note:', error));\n  };\n  const deleteNote = id => {\n    fetch(`http://localhost:3000/api/notes/${id}`, {\n      method: 'DELETE'\n    }).then(() => {\n      fetchNotes(); // Recargar las notas después de eliminar\n    }).catch(error => console.error('Error deleting note:', error));\n  };\n  useEffect(() => {\n    fetchNotes();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"UserManagement\",\n      children: [isAdminLoggedIn && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUserManagementClick,\n        children: \"Users Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 29\n      }, this), showUserManagement && /*#__PURE__*/_jsxDEV(UserManagement, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), !showUserManagement && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"Notes\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Create Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NoteForm, {\n        addNote: addNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My Notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), notes.map(note => /*#__PURE__*/_jsxDEV(Note, {\n        note: note,\n        deleteNote: deleteNote,\n        updateNote: updateNote\n      }, note.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(NotesList, \"k5rd8tukOF9ng34jQDL5VYWZyGI=\");\n_c = NotesList;\nexport default NotesList;\nvar _c;\n$RefreshReg$(_c, \"NotesList\");","map":{"version":3,"names":["React","useEffect","useState","Note","NoteForm","UserManagement","jsxDEV","_jsxDEV","NotesList","isAdminLoggedIn","_s","showUserManagement","setShowUserManagement","handleUserManagementClick","notes","setNotes","fetchNotes","fetch","then","response","json","data","catch","error","console","addNote","note","method","headers","body","JSON","stringify","newNote","updateNote","id","updatedNote","updatedNotes","map","deleteNote","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/victo/Documents/GitHub/DSW/frontend/src/components/NotesList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Note from './Note'; // Asegúrate de tener este componente\r\nimport NoteForm from './NoteForm'; // Asegúrate de tener este componente\r\nimport '../styles/App.css'\r\nimport UserManagement from './UserManagement';\r\n\r\n\r\nfunction NotesList({ isAdminLoggedIn}) {\r\n  const [showUserManagement, setShowUserManagement] = useState(false); // Estado para controlar si se muestra UserManagement\r\n\r\n  const handleUserManagementClick = () => {\r\n    setShowUserManagement(!showUserManagement);\r\n  }\r\n  const [notes, setNotes] = useState([]);\r\n  const fetchNotes = () => {\r\n    fetch('http://localhost:3000/api/notes')\r\n      .then(response => response.json())\r\n      .then(data => setNotes(data))\r\n      .catch(error => console.error('Error fetching notes:', error));\r\n  };\r\n\r\n  const addNote = (note) => {\r\n    fetch('http://localhost:3000/api/notes', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(note),\r\n    })\r\n    .then(response => response.json())\r\n    .then(newNote => {\r\n      setNotes([...notes, newNote]); // Agregar la nueva nota al estado\r\n    })\r\n    .catch(error => console.error('Error adding note:', error));\r\n  };\r\n\r\n  const updateNote = (id, updatedNote) => {\r\n    fetch(`http://localhost:3000/api/notes/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(updatedNote),\r\n    })\r\n    .then(response => response.json())\r\n    .then(updatedNote => {\r\n      const updatedNotes = notes.map(note => {\r\n        if (note.id === id) {\r\n          return updatedNote;\r\n        }\r\n        return note;\r\n      });\r\n      setNotes(updatedNotes); // Actualizar el estado con la nota actualizada\r\n    })\r\n    .catch(error => console.error('Error updating note:', error));\r\n  };\r\n\r\n  const deleteNote = (id) => {\r\n    fetch(`http://localhost:3000/api/notes/${id}`, {\r\n      method: 'DELETE',\r\n    })\r\n    .then(() => {\r\n      fetchNotes(); // Recargar las notas después de eliminar\r\n    })\r\n    .catch(error => console.error('Error deleting note:', error));\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchNotes();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div id='UserManagement'>\r\n        {isAdminLoggedIn && <button onClick={handleUserManagementClick}>Users Management</button>}\r\n        {showUserManagement && <UserManagement />}\r\n      </div>\r\n      {!showUserManagement && (\r\n        <div id='Notes'>\r\n          <h1>Create Note</h1>\r\n            <NoteForm addNote={addNote} />\r\n          <h1>My Notes</h1>\r\n          {notes.map(note => (\r\n            <Note \r\n              key={note.id} \r\n              note={note} \r\n              deleteNote={deleteNote} \r\n              updateNote={updateNote}\r\n            />\r\n          ))}\r\n      </div>\r\n      )}\r\n    </div>\r\n  );\r\n  \r\n}\r\n\r\nexport default NotesList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}